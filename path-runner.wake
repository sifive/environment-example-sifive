global def makePathRunner name scoreMultiplier path runner =
  def score rawPlan =
    def notInPath resource =
      extract '([^/]*/)?([^/]+)/([^/]+)' resource
      | at 1
      | whichIn path
      | (_ ==* "")
      | try (\_ True)
    def plan = editPlanResources notInPath.filter rawPlan
    def handle _ = raise "{name}: cannot supply resources: {catWith " " plan.getPlanResources}"
    plan
    | runner.getRunnerScore
    | (_ *. scoreMultiplier)
    | try handle

  def pre runnerInput =
    runnerInput
    | editRunnerInputEnvironment (editEnvValue "PATH" ("{path}:{_}"))
    | (Pair _ Unit)

  def post (Pair runnerOutput Unit) = runnerOutput

  makeRunner name score pre post runner

def envVar = "WAKE_PATH"

publish runner = match envVar.getenv
  Some path =
    makePathRunner "{envVar}-manual" 1.5 path manualRunner,
    makePathRunner "{envVar}-fuse"   1.5 path fuseRunner,
    Nil
  None = Nil
