def makeRISCVEnvVarRunner name scoreMultiplier riscvValue runner =
  def score plan =
    def regex = `riscv-tools/[^/]+`
    match plan.getPlanResources
      resource, Nil if matches regex resource =
        plan
        | editPlanResources (filter (! matches regex _))
        | runner.getRunnerScore
        | rmap (_ *. scoreMultiplier)
      _ = Fail "{name}: cannot supply resources: {catWith " " plan.getPlanResources}"

  def pre runnerInput =
    def addEnv env =
      env
      | editEnvValue "PATH" ("{riscvValue}/bin:{_}")
      | (_ ++ ("{riscvEnvVar}={riscvValue}", Nil))
    runnerInput
    | rmap addEnv.editRunnerInputEnvironment
    | (Pair _ Unit)

  def post (Pair runnerOutput Unit) = runnerOutput

  makeRunner name score pre post runner

def riscvEnvVar = "RISCV"

publish runner = match riscvEnvVar.getenv
  Some riscvValue =
    makeRISCVEnvVarRunner "{riscvEnvVar}-local" 2.0 riscvValue localRunner,
    makeRISCVEnvVarRunner "{riscvEnvVar}-default" 2.0 riscvValue defaultRunner,
    Nil
  None = Nil
