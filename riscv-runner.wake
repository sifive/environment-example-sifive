def makeRISCVEnvVarRunner name scoreMultiplier riscvValue runner =
  def score plan =
    match plan.getPlanResources
      resource, Nil if matches 'riscv-tools/[^/]+' resource =
        plan
        | setPlanResources Nil
        | runner.getRunnerScore
        | (_ *. scoreMultiplier)
      _ = raise "{name}: cannot supply resources: {catWith " " plan.getPlanResources}"

  def pre runnerInput =
    def addEnv env =
      env
      | editEnvValue "PATH" ("{riscvValue}/bin:{_}")
      | (_ ++ ("{riscvEnvVar}={riscvValue}", Nil))
    runnerInput
    | editRunnerInputEnvironment addEnv
    | (Pair _ Unit)

  def post (Pair runnerOutput Unit) = runnerOutput

  makeRunner name score pre post runner

def riscvEnvVar = "RISCV"

publish runner = match riscvEnvVar.getenv
  Some riscvValue =
    makeRISCVEnvVarRunner "{riscvEnvVar}-manual" 0.5 riscvValue manualRunner,
    makeRISCVEnvVarRunner "{riscvEnvVar}-fuse"   0.5 riscvValue fuseRunner,
    Nil
  None = Nil
